heat_template_version: 2013-05-23

description: |
  Single Linux server with the
  [Open Source Chef Server](http://docs.chef.io/open_source/). All supporting
  services such as [PostgreSQL](http://www.postgresql.org/),
  [Nginx](http://wiki.nginx.org/Main) and
  [RabbitMQ](http://www.rabbitmq.com/) are bundled in with this installation.

parameter_groups:

- label: Server Settings
  parameters:
  - flavor
  - image

- label: rax-dev-params
  # These are parameters that will not be displayed in the portal. The purpose
  # of these parameters are for users who are developing or testing newer or
  # different setups. If any of these parameters are changed, there is a good
  # chance this stack will fail to properly deploy.
  parameters:
  - server_hostname

parameters:

  server_hostname:
    label: Server Hostname
    description: Host name to give the Chef Server
    type: string
    default: Chef-Server
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters.

  image:
    label: Operating System
    description: |
      Server image used for all servers that are created as a part of this
      deployment
    type: string
    default: Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
    constraints:
    - allowed_values:
      - Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
      description: Must be a supported operating system.

  flavor:
    label: Server Size
    description: |
      Rackspace Cloud Server flavor to use. The size is based on the amount of
      RAM for the provisioned server.
    type: string
    default: 2 GB General Purpose v1
    constraints:
    - allowed_values:
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
      - 15 GB I/O v1
      - 30 GB I/O v1
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

resources:
  wait_condition:
    type: OS::Heat::SwiftSignal
    properties:
      handle: { get_resource: wait_condition_handle }
      timeout: 1800

  wait_condition_handle:
    type: OS::Heat::SwiftSignalHandle

  ssh_key:
    type: "OS::Nova::KeyPair"
    properties:
      name: { get_param: "OS::stack_id" }
      save_private_key: true

  chef_server:
    type: "OS::Nova::Server"
    properties:
      name: { get_param: server_hostname }
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_resource: ssh_key }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
      config_drive: "true"
      user_data_format: RAW
      user_data:
         str_replace:
          template: |
            #cloud-config
            package_update: true
            package_upgrade: true
            packages:
              - curl
              - vim
            write_files:
              # Install Script
              - path: /tmp/chef-server.sh
                permissions: '0544'
                content: |
                  #!/bin/bash -v
                  cd /tmp
                  # Fetch Chef 12 installer
                  wget https://web-dl.packagecloud.io/chef/stable/packages/ubuntu/trusty/chef-server-core_12.1.0-1_amd64.deb
                  # Install Packages
                  dpkg -i chef-server-core_12.1.0-1_amd64.deb
                  # Initialize and Start Chef Server
                  chef-server-ctl reconfigure
                  # Add Chef Manage
                  # Config Options: https://docs.chef.io/config_rb_manage.html
                  chef-server-ctl install opscode-manage
                  chef-server-ctl reconfigure
                  opscode-manage-ctl reconfigure
                  echo "disable_sign_up true" > /etc/opscode-manage/manage.rb
                  opscode-manage-ctl reconfigure
                  # Add Chef Reporting
                  chef-server-ctl install opscode-reporting
                  chef-server-ctl reconfigure
                  opscode-reporting-ctl reconfigure
                  # Add firewall rules
                  ufw allow in 22
                  ufw allow in 80/tcp
                  ufw allow in 443/tcp
                  ufw allow in 9090/tcp
                  ufw --force enable
                  # Notify success
                  wc_notify --data-binary '{"status": "SUCCESS"}'
            runcmd:
              - /tmp/chef-server.sh
          params:
            wc_notify: { get_attr: ['wait_condition_handle', 'curl_cli'] }

outputs:
  private_key:
    description: SSH Private Key
    value: { get_attr: [ssh_key, private_key] }

  server_ip:
    description: Server IP
    value: { get_attr: [chef_server, accessIPv4] }

  chef_url:
    description: Chef URL
    value:
      str_replace:
        template: "https://%server_ip%"
        params:
          "%server_ip%": { get_attr: [chef_server, accessIPv4] }
